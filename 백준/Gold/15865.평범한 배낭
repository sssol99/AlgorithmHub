import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
import java.util.regex.Pattern;

public class Main {
	static class Item{
		int weight;
		int cost;
		public Item(int weight, int cost) {
			this.weight = weight;
			this.cost = cost;
		}
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer stk = new StringTokenizer(br.readLine());

		int N = Integer.parseInt(stk.nextToken()); // 물품의 수
		int K = Integer.parseInt(stk.nextToken()); // 준서가 버틸 수  있는 무게

		long[][] dp = new long[N+1][K+1];
		Item items[] = new Item[N+1];

		for(int i = 0 ; i <= N ; i++) dp[i][0] = 0;
		for(int i = 0 ; i <= K ; i++) dp[0][i] = 0;

		for(int i = 1 ; i <= N ; i++) {
			stk = new StringTokenizer(br.readLine());
			int w =  Integer.parseInt(stk.nextToken());
			int c =  Integer.parseInt(stk.nextToken());
			items[i] = new Item(w,c);
		}

		for(int i = 1 ; i <= N ; i++){
			for(int j = 1 ; j <= K ; j++){
				if(j-items[i].weight >= 0){
					dp[i][j] = Long.max(dp[i-1][j], dp[i-1][j-items[i].weight]+ items[i].cost);
				}else{
					dp[i][j] = dp[i-1][j];
				}
			}
		}

		System.out.println(dp[N][K]);
	}
}
